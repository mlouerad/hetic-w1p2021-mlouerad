{"version":3,"sources":["js/script.js"],"names":["TweenMax","to","opacity","ease","Power4","easeOut","delay","y","FadeTransition","Barba","BaseTransition","extend","start","Promise","all","newContainerLoading","fadeOut","then","fadeIn","bind","$","oldContainer","animate","promise","_this","$el","newContainer","hide","css","visibility","done","Pjax","getTransition"],"mappings":";AAEAA,SAASC,GAAG,iCAAiC,KAAO,CAACC,QAAQ,EAAEC,KAAMC,OAAOC,QAAQC,MAAM,IAC1FN,SAASC,GAAG,mBAAmB,IAAI,CAACC,QAAQ,EAAEK,EAAE,KAAKJ,KAAMC,OAAOC,QAAQC,MAAM,MAChFN,SAASC,GAAG,kBAAkB,EAAE,CAACC,QAAQ,EAAEK,EAAE,KAAKJ,KAAMC,OAAOC,QAAQC,MAAM,MAC7EN,SAASC,GAAG,eAAe,EAAE,CAACC,QAAQ,EAAEK,EAAE,KAAKJ,KAAMC,OAAOC,QAAQC,MAAM,MAK1E,IAAIE,EAAiBC,MAAMC,eAAeC,OAAO,CAC/CC,MAAO,WAQLC,QACGC,IAAI,CAAC,KAAKC,oBAAqB,KAAKC,YACpCC,KAAK,KAAKC,OAAOC,KAAK,QAG3BH,QAAS,WAKAI,OAAAA,EAAE,KAAKC,cAAcC,QAAQ,CAAEpB,QAAS,IAAKqB,WAGtDL,OAAQ,WAOFM,IAAAA,EAAQ,KACRC,EAAML,EAAE,KAAKM,cAEjBN,EAAE,KAAKC,cAAcM,OAErBF,EAAIG,IAAI,CACNC,WAAa,UACb3B,QAAU,IAGZuB,EAAIH,QAAQ,CAAEpB,QAAS,GAAK,IAAK,WAM/BsB,EAAMM,YASZrB,MAAMsB,KAAKC,cAAgB,WAMlBxB,OAAAA,GAGTC,MAAMsB,KAAKnB","file":"script.1f050771.map","sourceRoot":"..\\src","sourcesContent":["\r\n\r\nTweenMax.to('.main-home__container__picture',0.0001,{opacity:1,ease: Power4.easeOut,delay:1});\r\nTweenMax.to('.main-home__name',1.5,{opacity:1,y:\"20\",ease: Power4.easeOut,delay:1.2});\r\nTweenMax.to('.main-home__job',1,{opacity:1,y:\"20\",ease: Power4.easeOut,delay:1.5});\r\nTweenMax.to('.header-home',1,{opacity:1,y:\"20\",ease: Power4.easeOut,delay:1.7});\r\n\r\n\r\n \r\n\r\nvar FadeTransition = Barba.BaseTransition.extend({\r\n  start: function() {\r\n    /**\r\n     * This function is automatically called as soon the Transition starts\r\n     * this.newContainerLoading is a Promise for the loading of the new container\r\n     * (Barba.js also comes with an handy Promise polyfill!)\r\n     */\r\n\r\n    // As soon the loading is finished and the old page is faded out, let's fade the new page\r\n    Promise\r\n      .all([this.newContainerLoading, this.fadeOut()])\r\n      .then(this.fadeIn.bind(this));\r\n  },\r\n\r\n  fadeOut: function() {\r\n    /**\r\n     * this.oldContainer is the HTMLElement of the old Container\r\n     */\r\n\r\n    return $(this.oldContainer).animate({ opacity: 0 }).promise();\r\n  },\r\n\r\n  fadeIn: function() {\r\n    /**\r\n     * this.newContainer is the HTMLElement of the new Container\r\n     * At this stage newContainer is on the DOM (inside our #barba-container and with visibility: hidden)\r\n     * Please note, newContainer is available just after newContainerLoading is resolved!\r\n     */\r\n\r\n    var _this = this;\r\n    var $el = $(this.newContainer);\r\n\r\n    $(this.oldContainer).hide();\r\n\r\n    $el.css({\r\n      visibility : 'visible',\r\n      opacity : 0\r\n    });\r\n\r\n    $el.animate({ opacity: 1 }, 400, function() {\r\n      /**\r\n       * Do not forget to call .done() as soon your transition is finished!\r\n       * .done() will automatically remove from the DOM the old Container\r\n       */\r\n\r\n      _this.done();\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Next step, you have to tell Barba to use the new Transition\r\n */\r\n\r\nBarba.Pjax.getTransition = function() {\r\n  /**\r\n   * Here you can use your own logic!\r\n   * For example you can use different Transition based on the current page or link...\r\n   */\r\n\r\n  return FadeTransition;\r\n};\r\n\r\nBarba.Pjax.start();\r\n\r\n"]}